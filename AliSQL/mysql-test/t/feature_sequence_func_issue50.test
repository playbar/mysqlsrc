--source include/have_binlog_format_row.inc
--source include/master-slave.inc

connection master;
create database s_db;
grant all on s_db.* to normal_1@'%' identified by 'pass';
grant all on test.* to normal_2@'%' identified by 'pass';
grant all on s_db.* to normal_3@'%' identified by 'pass';
grant all on test.* to normal_4@'%' identified by 'pass';

create table s_db.t1(id int, col1 int)engine=innodb;

--sync_slave_with_master

connect(m_normal_1, 127.0.0.1, normal_1, pass, s_db, $MASTER_MYPORT);
connect(m_normal_2, 127.0.0.1, normal_2, pass, test, $MASTER_MYPORT);

connect(s_normal_3, 127.0.0.1, normal_3, pass, s_db, $SLAVE_MYPORT);
connect(s_normal_4, 127.0.0.1, normal_4, pass, test, $SLAVE_MYPORT);

connection slave;
set global read_only=on;

--echo ###########################################
--echo master and slave sync sequence.
--echo ###########################################
connection master;
use s_db;

create sequence s1;
show create table s1;

--sync_slave_with_master
connection slave;
use s_db;
show create table s1;

connection master;
use s_db;

drop sequence s1;


--echo ###########################################
--echo test keyword
--echo ###########################################
connection master;
use s_db;
create table t_2(currval int, nextval int);
drop table t_2;

--sync_slave_with_master

--echo ###########################################
--echo dml with func
--echo ###########################################
connection m_normal_1;
use s_db;

create sequence s1 start with 1 minvalue 1 maxvalue 7 cache 2 cycle increment by 2;

--error ER_SEQUENCE_NOT_DEFINED
select currval for s1;

--error ER_SEQUENCE_NOT_DEFINED
select currval(s1);

select nextval(s1);

insert into t1 values(nextval(s1), currval(s1));

select * from t1;

update t1 set col1=nextval(s1);
select * from t1;

commit;

drop sequence s1;

--echo ###########################################
--echo func, trigger, procedure with sequence func
--echo ###########################################
connection m_normal_1;
use s_db;

create sequence s1 start with 1 minvalue 1 cache 2 cycle increment by 2;

delimiter $$;
CREATE FUNCTION `test_func_1` () RETURNS int
BEGIN
    RETURN (select nextval(s1));
END$$
delimiter ;$$

delimiter $$;
CREATE FUNCTION `test_func_2` () RETURNS int
BEGIN
    RETURN (select currval(s1));
END$$
delimiter ;$$

--error ER_SEQUENCE_NOT_DEFINED
select test_func_2();

select test_func_1();
select test_func_2();

select test_func_1();
select test_func_2();

drop function test_func_1;
drop function test_func_2;


set autocommit=0;
select * from t1;
delimiter $$;
 CREATE PROCEDURE test_proc_1()
 BEGIN
  insert into t1 values(nextval(s1), currval(s1));
  insert into t1 values(nextval(s1), currval(s1));
 END$$
delimiter ;$$


call test_proc_1();
select * from t1;

rollback;
select * from t1;
select nextval(s1);
commit;

drop procedure test_proc_1;


create table t2(id int)engine=innodb;

delimiter $$;
CREATE TRIGGER test_tri_1
AFTER INSERT ON t1
FOR EACH ROW
BEGIN INSERT INTO t2 VALUES(nextval(s1));
END$$
delimiter ;$$

insert into t1 values(nextval(s1), nextval(s1));
insert into t1 values(nextval(s1), nextval(s1));

select * from t1;
select * from t2;
commit;

drop trigger test_tri_1;
drop table t2;



connection master;
use s_db;
drop database s_db;
drop user normal_1@'%';
drop user normal_2@'%';
drop user normal_3@'%';
drop user normal_4@'%';


--sync_slave_with_master
--source include/rpl_end.inc
