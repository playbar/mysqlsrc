--disable_warnings
drop table if exists t1,t2,t3,t4,t5,t6,t7,t8,t9;
--enable_warnings

#only blob/text/varchar/varbinary was supported
create table t1 (a int column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t1;
create table t2 (a varchar(100) column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t2;
create table t3 (a blob column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t3;
create table t4 (a text column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t4;
create table t5 (a text binary column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t5;
create table t6(a text CHARACTER SET gbk column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t6;
create table t7(a text BINARY CHARACTER SET gbk column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t7;
create table t8 (a varbinary(1000) column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t8;
create table t9 ( a varchar(1000) column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t9;

#test index creation
#compressed column was not allowed to defined as a key
drop table t1;
--error ER_BLOB_KEY_WITH_COMPRESS
create table t1(a blob column_format compressed, key(a(10)));

create table t1(a blob column_format compressed);
--error ER_BLOB_KEY_WITH_COMPRESS
alter table t3 add key(a(10));

drop table t1;
create table t1 (a blob) engine=innodb;
#it's ok if the blob column is not compressed
alter table t1 add key(a(10));

#test modifying column format
drop table t1;
create table t1 (a blob) CHARACTER SET gbk engine=innodb;
insert into t1 values (repeat('abc',5));
insert into t1 values (repeat('abc',100));
select * from t1;
alter table t1 modify column a blob column_format compressed;
select * from t1;
show create table t1;
checksum table t1;
alter table t1 modify column a varchar(10000) column_format compressed;
show create table t1;
alter table t1 modify column a varchar(10000);
alter table t1 modify column a blob column_format compressed;
checksum table t1;

#test add column with default value
drop table t1;
create table t1 (a int auto_increment primary key) CHARACTER SET gbk engine=innodb;
insert into t1 values (NULL);
alter table t1 add column b text column_format compressed;
insert into t1 (a) values (NULL);
alter table t1 add column c varchar(1000) column_format compressed;
insert into t1 (a,b,c) values (NULL, "hello!", "world!");
alter table t1 add column d varchar(10000) column_format compressed default "hello, world! see you!";
insert into t1 (a,b,c) values (NULL, "hello", "world!");
select * from t1;

#test new option:innodb_rds_column_compression_level
set @old_innodb_rds_column_compression_level = @@global.innodb_rds_column_compression_level;

drop table t1;
create table t1 (a blob column_format compressed) CHARACTER SET gbk engine=innodb;
set @@global.innodb_rds_column_compression_level = -1;
select @@global.innodb_rds_column_compression_level;
insert into t1 values(repeat('abcd', 200));

set @@global.innodb_rds_column_compression_level = 5;
select @@global.innodb_rds_column_compression_level;
insert into t1 values(repeat('abcd', 200));

set @@global.innodb_rds_column_compression_level = 9;
select @@global.innodb_rds_column_compression_level;
insert into t1 values(repeat('abcd', 200));

set @@global.innodb_rds_column_compression_level = 10;
select @@global.innodb_rds_column_compression_level;

select max(length(a)) from t1;
#test new option:innodb_rds_column_zlib_strategy
set @old_innodb_rds_column_zlib_strategy = @@global.innodb_rds_column_zlib_strategy;

truncate table t1;
insert into t1 values(repeat('abcd', 10));
set @@global.innodb_rds_column_zlib_strategy = -1;
select @@global.innodb_rds_column_zlib_strategy;
insert into t1 values(repeat('abcd', 10));

set @@global.innodb_rds_column_zlib_strategy = 0;
select @@global.innodb_rds_column_zlib_strategy;
insert into t1 values(repeat('abcd', 200));


set @@global.innodb_rds_column_zlib_strategy = 1;
select @@global.innodb_rds_column_zlib_strategy;
insert into t1 values(repeat('abcd', 200));

set @@global.innodb_rds_column_zlib_strategy = 2;
select @@global.innodb_rds_column_zlib_strategy;
insert into t1 values(repeat('abcd', 200));

set @@global.innodb_rds_column_zlib_strategy = 3;
select @@global.innodb_rds_column_zlib_strategy;
insert into t1 values(repeat('abcd', 200));

set @@global.innodb_rds_column_zlib_strategy = 4;
select @@global.innodb_rds_column_zlib_strategy;
insert into t1 values(repeat('abcd', 200));

set @@global.innodb_rds_column_zlib_strategy = 5;
select @@global.innodb_rds_column_zlib_strategy;
select max(length(a)) from t1;

#test new option:innodb_rds_column_zlib_wrap
truncate table t1;
set @old_innodb_rds_column_zlib_wrap = @@global.innodb_rds_column_zlib_wrap;
set @@global.innodb_rds_column_zlib_wrap = 0;
select @@global.innodb_rds_column_zlib_wrap;
insert into t1 values (repeat('abcd', 10));
insert into t1 values (repeat('abcd',1000));

set @@global.innodb_rds_column_zlib_wrap = 1;
select @@global.innodb_rds_column_zlib_wrap;
insert into t1 values (repeat('abcd', 10));
insert into t1 values (repeat('abcd',1000));

select max(length(a)) from t1;

#test innodb_rds_column_zip_threshold
truncate table t1;
set @old_innodb_rds_column_zip_threshold = @@global.innodb_rds_column_zip_threshold;
show variables like 'innodb_rds_column_zip_threshold';
set global innodb_rds_column_zip_threshold = 0;
select @@global.innodb_rds_column_zip_threshold;
insert into t1 values (repeat('abc',10));
set global innodb_rds_column_zip_threshold = 96;
select @@global.innodb_rds_column_zip_threshold;
insert into t1 values (repeat('abc',40));
set global innodb_rds_column_zip_threshold = 1000;
select @@global.innodb_rds_column_zip_threshold;
insert into t1 values (repeat('abc',1000));

select max(length(a)) from t1;

#test new status variable:
#     Innodb_column_compress
#     Innodb_column_decompress
show global status like '%innodb%compress%';
drop table t1;
create table t1 (a int auto_increment primary key, b int, c int, d blob column_format compressed) CHARACTER SET gbk engine=innodb;
show create table t1;
insert into t1 select NULL,100,100,repeat('abc',100);
insert into t1 select NULL,100,100,repeat('abc',100) from t1;
insert into t1 select NULL,100,100,repeat('abc',100) from t1 a, t1 b;
insert into t1 select NULL,100,100,repeat('abc',100) from t1 a, t1 b;
insert into t1 select NULL,100,100,repeat('abc',100) from t1 a, t1 b;
show global status like '%innodb%compress%';
select count(*) from t1;
show global status like '%innodb%compress%';

select a,b,c from t1 limit 10;
show global status like '%innodb%compress%';

select max(length(d)) from t1;
show global status like '%innodb%compress%';

#test checksum
drop table t2;
create table t2 like t1;
insert into t2 select * from t1;
alter table t2 modify column d blob;
show create table t2;

checksum table t1,t2;

#test new option innodb_rds_column_zip_mem_use_heap
set @old_innodb_rds_column_zip_mem_use_heap = @@global.innodb_rds_column_zip_mem_use_heap;
set global innodb_rds_column_zip_mem_use_heap = 1;
create table t10 (a int auto_increment primary key, b blob column_format compressed) engine = innodb;
insert into t10 values (NULL, repeat('abc',5000));
select length(b) from t10;
#Make the compression failed.
set @@global.innodb_rds_column_zip_threshold = 10;
insert into t10 values (NULL,'abcdeghijklm');
# one byte to store length
drop table t10;

# for coverage test
create table t10 (a int auto_increment primary key, b blob) engine = innodb;
insert into t10 values (NULL, repeat('abc',5000));
select length(b) from t10;
drop table t10;

# use 1byte to store the uncompressed data length
create table t10 (a tinytext column_format compressed) engine = innodb;
insert into t10(a) values (repeat('abc',50));
select length(a) from t10;
drop table t10;
# use 2byte to store the uncompressed data length
create table t10 (a text column_format compressed) engine = innodb;
insert into t10(a) values (repeat('abc',50));
select length(a) from t10;
drop table t10;
# use 3byte to store the uncompressed data length
create table t10 (a mediumtext column_format compressed) engine = innodb;
insert into t10(a) values (repeat('abc',50));
select length(a) from t10;
drop table t10;
# use 4byte to store the uncompressed data length
create table t10 (a longtext column_format compressed) engine = innodb;
insert into t10(a) values (repeat('abc',50));
select length(a) from t10;
drop table t10;

create table t10 (a int primary key, b blob , key (b(20))) engine = innodb;
insert into t10 values (1,repeat('abc',10));
insert into t10 values (2,repeat('bca',10));
insert into t10 values (3,repeat('cab',10));
select a from t10 where b like 'abc%' order by a;
update t10 set b = repeat('aaa',10);
drop table t10;
create table t10 (a blob, b text ,primary key(a(1))) engine = innodb;
insert into t10 values (REPEAT('a',8000),REPEAT('b',8000));
update t10 set a = REPEAT('a',7999);
drop table t10;

#cleanup
set @@global.innodb_rds_column_compression_level = @old_innodb_rds_column_compression_level;
set @@global.innodb_rds_column_zlib_wrap = @old_innodb_rds_column_zlib_wrap;
set @@global.innodb_rds_column_zlib_strategy = @old_innodb_rds_column_zlib_strategy;
set @@global.innodb_rds_column_zip_threshold = @old_innodb_rds_column_zip_threshold;
set @@global.innodb_rds_column_zip_mem_use_heap = @old_innodb_rds_column_zip_mem_use_heap;
drop table t1,t2,t3,t4,t5,t6,t7,t8,t9;
