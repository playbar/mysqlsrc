include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
create database s_db;
grant all on s_db.* to normal_1@'%' identified by 'pass';
grant all on test.* to normal_2@'%' identified by 'pass';
grant all on s_db.* to normal_3@'%' identified by 'pass';
grant all on test.* to normal_4@'%' identified by 'pass';
create table s_db.t1(id int, col1 int)engine=innodb;
set global read_only=on;
###########################################
master and slave sync sequence.
###########################################
use s_db;
create sequence s1;
show create table s1;
Table	Create Table
s1	CREATE SEQUENCE `s1` (
  `currval` bigint(21) NOT NULL COMMENT 'current value',
  `nextval` bigint(21) NOT NULL COMMENT 'next value',
  `minvalue` bigint(21) NOT NULL COMMENT 'min value',
  `maxvalue` bigint(21) NOT NULL COMMENT 'max value',
  `start` bigint(21) NOT NULL COMMENT 'start value',
  `increment` bigint(21) NOT NULL COMMENT 'increment value',
  `cache` bigint(21) NOT NULL COMMENT 'cache size',
  `cycle` bigint(21) NOT NULL COMMENT 'cycle state',
  `round` bigint(21) NOT NULL COMMENT 'already how many round'
) ENGINE=InnoDB DEFAULT CHARSET=latin1
use s_db;
show create table s1;
Table	Create Table
s1	CREATE SEQUENCE `s1` (
  `currval` bigint(21) NOT NULL COMMENT 'current value',
  `nextval` bigint(21) NOT NULL COMMENT 'next value',
  `minvalue` bigint(21) NOT NULL COMMENT 'min value',
  `maxvalue` bigint(21) NOT NULL COMMENT 'max value',
  `start` bigint(21) NOT NULL COMMENT 'start value',
  `increment` bigint(21) NOT NULL COMMENT 'increment value',
  `cache` bigint(21) NOT NULL COMMENT 'cache size',
  `cycle` bigint(21) NOT NULL COMMENT 'cycle state',
  `round` bigint(21) NOT NULL COMMENT 'already how many round'
) ENGINE=InnoDB DEFAULT CHARSET=latin1
use s_db;
drop sequence s1;
###########################################
test keyword
###########################################
use s_db;
create table t_2(currval int, nextval int);
drop table t_2;
###########################################
dml with func
###########################################
use s_db;
create sequence s1 start with 1 minvalue 1 maxvalue 7 cache 2 cycle increment by 2;
select currval for s1;
ERROR HY000: Sequence 's_db.s1' is not yet defined in this session
select currval(s1);
ERROR HY000: Sequence 's_db.s1' is not yet defined in this session
select nextval(s1);
nextval(s1)
1
insert into t1 values(nextval(s1), currval(s1));
select * from t1;
id	col1
3	3
update t1 set col1=nextval(s1);
select * from t1;
id	col1
3	5
commit;
drop sequence s1;
###########################################
func, trigger, procedure with sequence func
###########################################
use s_db;
create sequence s1 start with 1 minvalue 1 cache 2 cycle increment by 2;
CREATE FUNCTION `test_func_1` () RETURNS int
BEGIN
RETURN (select nextval(s1));
END$$
CREATE FUNCTION `test_func_2` () RETURNS int
BEGIN
RETURN (select currval(s1));
END$$
select test_func_2();
ERROR HY000: Sequence 's_db.s1' is not yet defined in this session
select test_func_1();
test_func_1()
1
select test_func_2();
test_func_2()
1
select test_func_1();
test_func_1()
3
select test_func_2();
test_func_2()
3
drop function test_func_1;
drop function test_func_2;
set autocommit=0;
select * from t1;
id	col1
3	5
CREATE PROCEDURE test_proc_1()
BEGIN
insert into t1 values(nextval(s1), currval(s1));
insert into t1 values(nextval(s1), currval(s1));
END$$
call test_proc_1();
select * from t1;
id	col1
3	5
5	5
7	7
rollback;
select * from t1;
id	col1
3	5
select nextval(s1);
nextval(s1)
9
commit;
drop procedure test_proc_1;
create table t2(id int)engine=innodb;
CREATE TRIGGER test_tri_1
AFTER INSERT ON t1
FOR EACH ROW
BEGIN INSERT INTO t2 VALUES(nextval(s1));
END$$
insert into t1 values(nextval(s1), nextval(s1));
insert into t1 values(nextval(s1), nextval(s1));
select * from t1;
id	col1
3	5
11	13
17	19
select * from t2;
id
15
21
commit;
drop trigger test_tri_1;
drop table t2;
use s_db;
drop database s_db;
drop user normal_1@'%';
drop user normal_2@'%';
drop user normal_3@'%';
drop user normal_4@'%';
include/rpl_end.inc
