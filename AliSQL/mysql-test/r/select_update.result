drop table if exists t1,t2;
create table t1 (a int auto_increment , primary key (a));
insert into t1 values (NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL),(NULL);
select a from update t1 set a=a+10 where a > 34;
a
45
46
select a-100 as orig from update t1 set a=a+100 where a > 0;
orig
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
45
46
select * from update t1 set a=a+100 where a=1 and a=2;
a
select * from update t1 set a=b+100 where a=1 and a=2;
ERROR 42S22: Unknown column 'b' in 'field list'
select * from update t1 set a=b+100 where c=1 and a=2;
ERROR 42S22: Unknown column 'c' in 'where clause'
select * from update t1 set d=a+100 where a=1;
ERROR 42S22: Unknown column 'd' in 'field list'
select * from t1;
a
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
145
146
drop table t1;
CREATE TABLE t1
(
place_id int (10) unsigned NOT NULL,
shows int(10) unsigned DEFAULT '0' NOT NULL,
ishows int(10) unsigned DEFAULT '0' NOT NULL,
ushows int(10) unsigned DEFAULT '0' NOT NULL,
clicks int(10) unsigned DEFAULT '0' NOT NULL,
iclicks int(10) unsigned DEFAULT '0' NOT NULL,
uclicks int(10) unsigned DEFAULT '0' NOT NULL,
ts timestamp,
PRIMARY KEY (place_id,ts)
);
INSERT INTO t1 (place_id,shows,ishows,ushows,clicks,iclicks,uclicks,ts)
VALUES (1,0,0,0,0,0,0,20000928174434);
select place_id, shows from UPDATE t1 SET shows=shows+1,ishows=ishows+1,ushows=ushows+1,clicks=clicks+1,iclicks=iclicks+1,uclicks=uclicks+1 WHERE place_id=1 AND ts>="2000-09-28 00:00:00";
place_id	shows
1	1
select place_id,shows from t1;
place_id	shows
1	1
drop table t1;
CREATE TABLE t1 (
lfdnr int(10) unsigned NOT NULL default '0',
ticket int(10) unsigned NOT NULL default '0',
client varchar(255) NOT NULL default '',
replyto varchar(255) NOT NULL default '',
subject varchar(100) NOT NULL default '',
timestamp int(10) unsigned NOT NULL default '0',
tstamp timestamp NOT NULL,
status int(3) NOT NULL default '0',
type varchar(15) NOT NULL default '',
assignment int(10) unsigned NOT NULL default '0',
fupcount int(4) unsigned NOT NULL default '0',
parent int(10) unsigned NOT NULL default '0',
activity int(10) unsigned NOT NULL default '0',
priority tinyint(1) unsigned NOT NULL default '1',
cc varchar(255) NOT NULL default '',
bcc varchar(255) NOT NULL default '',
body text NOT NULL,
comment text,
header text,
PRIMARY KEY  (lfdnr),
KEY k1 (timestamp),
KEY k2 (type),
KEY k3 (parent),
KEY k4 (assignment),
KEY ticket (ticket)
) ENGINE=MyISAM;
INSERT INTO t1 VALUES (773,773,'','','',980257344,20010318180652,0,'Open',10,0,0,0,1,'','','','','');
alter table t1 change lfdnr lfdnr int(10) unsigned not null auto_increment;
select status,type from update t1 set status=1 where type='Open';
status	type
1	Open
select status from t1;
status
1
drop table t1;
create table t1 (a int not null, b int not null, key (a));
insert into t1 values (1,1),(1,2),(1,3),(3,1),(3,2),(3,3),(3,1),(3,2),(3,3),(2,1),(2,2),(2,3);
SET @tmp=0;
select a, b from update t1 set b=(@tmp:=@tmp+1) order by a;
a	b
1	1
1	2
1	3
2	4
2	5
2	6
3	7
3	8
3	9
3	10
3	11
3	12
select * from update t1 set b=99 where a=1 order by b asc limit 1;
a	b
1	99
select * from t1 order by a,b;
a	b
1	2
1	3
1	99
2	4
2	5
2	6
3	7
3	8
3	9
3	10
3	11
3	12
select a, b from update t1 set b=100 where a=1 order by b desc limit 2;
a	b
1	100
1	100
select * from update t1 set a=a+10+b where a=1 order by b;
a	b
13	2
111	100
111	100
select * from t1 order by a,b;
a	b
2	4
2	5
2	6
3	7
3	8
3	9
3	10
3	11
3	12
13	2
111	100
111	100
create table t2 (a int not null, b int not null);
insert into t2 values (1,1),(1,2),(1,3);
select * from update t1 set b=(select distinct 1 from (select * from t2) a);
a	b
111	1
13	1
111	1
3	1
3	1
3	1
3	1
3	1
3	1
2	1
2	1
2	1
drop table t1,t2;
CREATE TABLE t1 (
`id_param` smallint(3) unsigned NOT NULL default '0',
`nom_option` char(40) NOT NULL default '',
`valid` tinyint(1) NOT NULL default '0',
KEY `id_param` (`id_param`,`nom_option`)
) ENGINE=MyISAM;
INSERT INTO t1 (id_param,nom_option,valid) VALUES (185,'600x1200',1);
select * from UPDATE t1 SET nom_option='test' WHERE id_param=185 AND nom_option='600x1200' AND valid=1 LIMIT 1;
id_param	nom_option	valid
185	test	1
select * from t1;
id_param	nom_option	valid
185	test	1
drop table t1;
create table t1 (id int not null auto_increment primary key, id_str varchar(32));
insert into t1 (id_str) values ("test");
select id, id_str from update t1 set id_str = concat(id_str, id) where id = last_insert_id();
id	id_str
1	test1
select * from t1;
id	id_str
1	test1
drop table t1;
create table t1 (a int, b char(255), key(a, b(20)));
insert into t1 values (0, '1');
select a, b from update t1 set b = b + 1 where a = 0;
a	b
0	2
select * from t1;
a	b
0	2
drop table t1;
create table t1(f1 int);
select DATABASE();
DATABASE()
test
update t1 set f1=1 where count(*)=1;
ERROR HY000: Invalid use of group function
select DATABASE();
DATABASE()
test
delete from t1 where count(*)=1;
ERROR HY000: Invalid use of group function
drop table t1;
create table t1 ( a int, b int default 0, index (a) );
insert into t1 (a) values (0),(0),(0),(0),(0),(0),(0),(0);
flush status;
select a from t1 order by a limit 1;
a
0
show status like 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	0
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
flush status;
select * from update t1 set a=9999 order by a limit 1;
a	b
9999	0
select * from update t1 set b=9999 order by a limit 1;
a	b
0	9999
show status like 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	0
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	2
Handler_read_rnd_next	9
flush status;
delete from t1 order by a limit 1;
show status like 'handler_read%';
Variable_name	Value
Handler_read_first	1
Handler_read_key	0
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
flush status;
delete from t1 order by a desc limit 1;
show status like 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	0
Handler_read_last	1
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
alter table t1 disable keys;
flush status;
delete from t1 order by a limit 1;
show status like 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	0
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	1
Handler_read_rnd_next	9
select * from t1;
a	b
0	0
0	0
0	0
0	0
0	0
select * from update t1 set a=a+10,b=1 order by a limit 3;
a	b
10	1
10	1
10	1
select * from update t1 set a=a+11,b=2 order by a limit 3;
a	b
11	2
11	2
21	2
select * from update t1 set a=a+12,b=3 order by a limit 3;
a	b
22	3
22	3
23	3
select * from t1 order by a;
a	b
11	2
21	2
22	3
22	3
23	3
drop table t1;
create table t1 (f1 date not null);
insert into t1 values('2000-01-01'),('0000-00-00');
select f1 from update t1 set f1='2002-02-02' where f1 is null;
f1
2002-02-02
select * from t1;
f1
2000-01-01
2002-02-02
drop table t1;
create table t1 (a int);
insert into t1 values (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);
create table t2 (a int, filler1 char(200), filler2 char(200), key(a));
insert into t2 select A.a + 10*B.a, 'filler','filler' from t1 A, t1 B;
flush status;
select * from update t2 set a=3 where a=2;
a	filler1	filler2
3	filler	filler
show status like 'handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	1
Handler_read_prev	0
Handler_read_rnd	1
Handler_read_rnd_next	0
drop table t1, t2;
create table t1(f1 int, `*f2` int);
insert into t1 values (1,1);
select `*f2` from update t1 set `*f2`=1;
*f2
1
drop table t1;
create table t1(f1 int);
select f2 from update t1 set f2=1 order by f2;
ERROR 42S22: Unknown column 'f2' in 'order clause'
drop table t1;
CREATE TABLE t1 (
request_id int unsigned NOT NULL auto_increment,
user_id varchar(12) default NULL,
time_stamp datetime NOT NULL default '0000-00-00 00:00:00',
ip_address varchar(15) default NULL,
PRIMARY KEY (request_id),
KEY user_id_2 (user_id,time_stamp)
);
INSERT INTO t1 (user_id) VALUES ('user1');
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
INSERT INTO t1(user_id) SELECT user_id FROM t1;
flush status;
SELECT user_id FROM t1 WHERE request_id=9999999999999;
user_id
show status like '%Handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	1
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
SELECT user_id FROM t1 WHERE request_id=999999999999999999999999999999;
user_id
show status like '%Handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
SELECT * FROM UPDATE t1 SET user_id=null WHERE request_id=9999999999999;
request_id	user_id	time_stamp	ip_address
show status like '%Handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
SELECT * FROM UPDATE t1 SET user_id=null WHERE request_id=999999999999999999999999999999;
request_id	user_id	time_stamp	ip_address
show status like '%Handler_read%';
Variable_name	Value
Handler_read_first	0
Handler_read_key	2
Handler_read_last	0
Handler_read_next	0
Handler_read_prev	0
Handler_read_rnd	0
Handler_read_rnd_next	0
DROP TABLE t1;
CREATE TABLE t1 (
a INT(11),
quux decimal( 31, 30 ),
UNIQUE KEY bar (a),
KEY quux (quux)
);
INSERT INTO
t1 ( a, quux )
VALUES
( 1,    1 ),
( 2,  0.1 );
INSERT INTO t1( a )
SELECT @newA := 1 + a FROM t1 WHERE quux <= 0.1;
SELECT * FROM t1;
a	quux
1	1.000000000000000000000000000000
2	0.100000000000000000000000000000
3	NULL
DROP TABLE t1;
DROP TABLE IF EXISTS t1;
DROP FUNCTION IF EXISTS f1;
CREATE FUNCTION f1() RETURNS INT RETURN f1();
CREATE TABLE t1 (i INT);
INSERT INTO t1 VALUES (1);
SELECT * FROM UPDATE t1 SET i = 3 WHERE f1();
ERROR HY000: Recursive stored functions and triggers are not allowed.
SELECT * FROM UPDATE t1 SET i = f1();
ERROR HY000: Recursive stored functions and triggers are not allowed.
DROP TABLE t1;
DROP FUNCTION f1;
End of 5.0 tests
# Multitable-view update is not allowed in SELECT...FROM UPDATE
CREATE TABLE t1 ( a INT, KEY( a ) );
INSERT INTO t1 VALUES (0), (1);
CREATE VIEW v1 AS SELECT t11.a, t12.a AS b FROM t1 t11, t1 t12;
SELECT * FROM UPDATE IGNORE v1 SET a = 1;
ERROR HY000: The target table v1 of the SELECT...FROM UPDATE is not updatable
DROP TABLE t1;
DROP VIEW v1;
#
# Bug#54734 assert in Diagnostics_area::set_ok_status
#
DROP TABLE IF EXISTS t1, not_exists;
DROP FUNCTION IF EXISTS f1;
DROP VIEW IF EXISTS v1;
CREATE TABLE t1 (PRIMARY KEY(pk)) AS SELECT 1 AS pk;
CREATE FUNCTION f1() RETURNS INTEGER RETURN (SELECT 1 FROM not_exists);
CREATE VIEW v1 AS SELECT pk FROM t1 WHERE f1() = 13;
SELECT * FROM UPDATE v1 SET pk = 7 WHERE pk > 0;
ERROR HY000: View 'test.v1' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them
DROP VIEW v1;
DROP FUNCTION f1;
DROP TABLE t1;
#
# Testcase for SELECT...FROM UPDATE syntax 
#
drop table if exists t1;
drop table if exists t2;
create table t1(id int auto_increment primary key, a int)engine=innodb;
insert into t1(a) values(1),(2),(3),(4),(5),(6);
create table t2(id int auto_increment primary key, a int)engine=innodb;
insert into t2(a) values(1),(1),(3),(3),(5),(5);
select * from update t1 set a=id;
id	a
1	1
2	2
3	3
4	4
5	5
6	6
select now() as time, id, a, id*2 as id2, id+a as ida from update t1 set a=a*2+4 where id=3;
time	id	a	id2	ida
#	3	10	6	13
select * from t1;
id	a
1	1
2	2
3	10
4	4
5	5
6	6
select * from update target_affect_row 1 t1 set a=a/2-2 where id=3;
id	a
3	3
select * from update target_affect_row 2 t1 set a=a/2-2 where id=3;
ERROR HY000: The affected row number does not match that of user specified.
select * from t1;
id	a
1	1
2	2
3	3
4	4
5	5
6	6
select * from update t1 set a=a/2-2 where id=3;
id	a
3	-1
select * from t1;
id	a
1	1
2	2
3	-1
4	4
5	5
6	6
select id, a from update t1 set a=a+3 where id=3;
id	a
3	2
select * from update t1 set a=id where id>2 and id<4;
id	a
3	3
select * from t1;
id	a
1	1
2	2
3	3
4	4
5	5
6	6
select max(a) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select min(a) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select avg(a) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select sum(a) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select max(a) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select count(id) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select count(*) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select count(distinct(id)) from update t1 set a=a+5;
ERROR HY000: Invalid use of group function
select id from (select * from update t1 set a=a*2 where id=2) as b;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'update t1 set a=a*2 where id=2) as b' at line 1
select * from t1 as a, (select * from update t1 set a=a*2 where id=2) as b;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'update t1 set a=a*2 where id=2) as b' at line 1
select * from update t1 set a=a*2 where id>3 union select * from t2 where id<4;
ERROR 42000: Incorrect usage/placement of 'SELECT...FROM UPDATE'
select * from t1 where id>3 union select * from update t2 set a=a*2 where id<4;
ERROR 42000: Incorrect usage/placement of 'SELECT...FROM UPDATE'
select * from update t1 set a=a*3 where id>3 union select * from update t2 set a=a*2 where id<4;
ERROR 42000: Incorrect usage/placement of 'SELECT...FROM UPDATE'
select * from udpate t1, t2 set t1.a=t2.a where t1.id=t2.id;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set t1.a=t2.a where t1.id=t2.id' at line 1
update t1, t2 set t1.a=t2.a where t1.id=t2.id;
explain select id, a from update t1 set a=id*2 where id=1;
ERROR 42000: Incorrect usage/placement of 'SELECT...FROM UPDATE'
desc select id, a from update t1 set a=id*2 where id=1;
ERROR 42000: Incorrect usage/placement of 'SELECT...FROM UPDATE'
select * from t1;
id	a
1	1
2	1
3	3
4	3
5	5
6	5
select * from t2;
id	a
1	1
2	1
3	3
4	3
5	5
6	5
drop table t1;
drop table t2;
#
# bugfix: empty result set if target updated field(s) is(are) not to be returned
#
drop table if exists ttt;
create table ttt(id int auto_increment primary key, num int, str varchar(32))engine=innodb;
insert into ttt(num, str) values(1,'hello'),(2,'qa'), (3,'select'),(4,'update');
select * from update ttt set num=5 where id=1;
id	num	str
1	5	hello
select * from ttt;
id	num	str
1	5	hello
2	2	qa
3	3	select
4	4	update
select id, num, str from update ttt set num=5 where id=1;
id	num	str
1	5	hello
select * from ttt;
id	num	str
1	5	hello
2	2	qa
3	3	select
4	4	update
select id, str from update ttt set num=5 where id=1;
id	str
1	hello
select * from ttt;
id	num	str
1	5	hello
2	2	qa
3	3	select
4	4	update
select id, str from update ttt set num=id;
id	str
1	hello
2	qa
3	select
4	update
drop table ttt;
